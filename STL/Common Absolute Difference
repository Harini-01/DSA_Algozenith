Description
You are given an array A of N integers and an integer K. Find the number of pairs (i, j) such that i < j and abs(Ai - Aj) = K

Input Format
The first line of the input contains one integer T - the number of test cases. Then T test cases follow.


The first line of each test case contains two space-separated integers N K - the length of the array and the required absolute difference.


The second line of each test case contains N space-separated integers.

Output Format
For each test case, print the number of pairs (i, j) such that i < j and abs(Ai - Aj) = K

Constraints

1≤T≤10^5
1≤T≤10^5
1≤N≤10^5
1≤N≤10^5
1≤Ai≤10^9
1≤Ai≤10^9
1≤K≤10^9

It is guaranteed that the sum of N over all test cases does not exceed 10^5.


Notice: 
K=0. Can you handle the case when K=0?

Sample input 1
3
5 2
1 2 3 4 5
4 1
3 1 2 6
3 10
1 3 2

Sample output 1
3
2
0

Code:
#include<bits/stdc++.h>

using namespace std;

void solve()
{
    int n;
    cin>>n;
    int k;
    cin>>k;
    map<int,int> freq;
    int arr[n];
    long long no_of_pairs=0;

    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
        freq[arr[i]]++;

        no_of_pairs+=freq[arr[i]+k];
        no_of_pairs+=freq[arr[i]-k];
    }
    
    cout<<no_of_pairs<<"\n";
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);

    int t=1;
    cin>>t;

    for(int i=0;i<t;i++)
    {
        solve();
    }

    
}
